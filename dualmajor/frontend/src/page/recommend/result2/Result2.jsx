import React, { useEffect, useRef, useState } from 'react'
import styled from 'styled-components'
import { Button,  Modal, Row, Col, Container, ProgressBar, Accordion, ListGroup, InputGroup, FormControl} from 'react-bootstrap';
import RecommendService from '../../../services/recommend.service';
import { useNavigate } from 'react-router-dom';
//import ReactTooltip from 'react-tooltip';

export default function Result() {
    //ÏÉÅÌÉúÍ∞í Ï†ïÏùò
    const [thisResult, setThisResult] = useState(false); //Î∞±ÏóîÎìúÎ°úÎ∂ÄÌÑ∞ Î∞õÏïÑÏò¨ Îç∞Ïù¥ÌÑ∞
    const [isError, setIsError] = useState(false); //Í≤∞Í≥º Í∞íÏù¥ ÏóêÎü¨Ïù∏ÏßÄ Ïó¨Î∂Ä Ï†ÄÏû•
    const [answer, setAnswer] = useState(false); //ÏÇ¨Ïö©ÏûêÍ∞Ä ÏÑ†ÌÉùÌïú ÌïôÎ¨∏ ÏÑ§Ï†ï


    //ÎßåÏ°±ÎèÑ Ï°∞ÏÇ¨ Î≥ÄÏàò
    const [modalShow, setModalShow] = useState(false); //Î™®Îã¨ÏùÑ ÌÜµÌï¥ ÎßåÏ°±ÎèÑ ÏàòÏßë
    const [satisfyingStar, setSatisfyingStar] = useState(1); //Î≥ÑÏ†ê
    const [reviewQuestion1, setReviewQuestion1] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏1
    const [reviewQuestion2, setReviewQuestion2] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏2
    const [reviewQuestion3, setReviewQuestion3] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏3
    const [reviewQuestion4, setReviewQuestion4] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏4
    const [reviewQuestion5, setReviewQuestion5] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏5
    const [reviewQuestion6, setReviewQuestion6] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏6
    const [reviewQuestion7, setReviewQuestion7] = useState("");//ÌõÑÍ∏∞ ÏßàÎ¨∏7

    //ÌÖåÏä§Ìä∏Ïö©
    // let testData = {
    //     "info": [
    //         {
    //             "departmentName": "Í≤ΩÏòÅ",
    //             "campus": "ÏÑúÏö∏",
    //             "intro": "inf1",
    //             "degree": "deg1",
    //             "career": "career1",//nullÍ∞ÄÎä•
    //             "curriculum": "Í≤ΩÏòÅÌïôÏõêÎ°†",//nullÍ∞ÄÎä•
    //             "certification": "Ï†ÑÏÇ∞ÌöåÍ≥Ñ",//nullÍ∞ÄÎä•
    //             "webPage": "www.hufs.ac.kr" //nullÍ∞ÄÎä•
    //         },
    //         {
    //             "departmentName": "Íµ≠Í∏à",
    //             "campus": "Í∏ÄÎ°úÎ≤å",
    //             "intro": "inf2",
    //             "degree": "deg2",
    //             "career": "career2",
    //             "curriculum": "Í≤ΩÏ†úÌïôÏõêÎ°†",//nullÍ∞ÄÎä•
    //             "certification": null,//nullÍ∞ÄÎä•
    //             "webPage": "www.hufs.ac.krÏä§ÏúÑÏä§ Îã§Î≥¥Ïä§ÏóêÏÑú Ïó¥Î¶∞ ÏÑ∏Í≥ÑÍ≤ΩÏ†úÌè¨Îüº Ïó∞Ï∞®Ï¥ùÌöå(WEF¬∑Îã§Î≥¥Ïä§Ìè¨Îüº)ÏóêÏÑúÎäî ÎπÑÌä∏ÏΩîÏù∏ Îì± Í∞ÄÏÉÅÌôîÌèêÎ•º ÎëòÎü¨Ïãº ÎπÑÍ¥ÄÏ†ÅÏù∏ Ï†ÑÎßùÎèÑ ÏèüÏïÑÏ°åÎã§. Í∏ÄÎ°úÎ≤å ÏûêÏÇ∞Ïö¥Ïö©ÏÇ¨ Íµ¨Í≤êÌïòÏûÑÏù∏Î≤†Ïä§Ìä∏Î®ºÌä∏Ïùò Ïä§ÏΩß ÎßàÏù¥ÎÑàÎìú ÏµúÍ≥†Ìà¨ÏûêÏ±ÖÏûÑÏûê(CIO)Îäî ÎπÑÌä∏ÏΩîÏù∏Ïù¥ 8000Îã¨Îü¨ÍπåÏßÄ Ìè≠ÎùΩÌï† Ïàò ÏûàÎã§Í≥† Í≤ΩÍ≥†ÌñàÎã§. ÌòÑ ÏãúÏÑ∏ÏóêÏÑú 70% Ïù¥ÏÉÅ Ï∂îÍ∞Ä Ìè≠ÎùΩÌï† Ïàò ÏûàÎã§Îäî Í≤ÉÏù¥Îã§."
    //         }
    //     ]
    // }

    //ÌôîÎ©¥ Ïù¥Îèô Ï†úÏñ¥Ïö© callbackÌï®Ïàò Ï†ïÏùò
    let navigate = useNavigate();


    useEffect(() => {
        //ÏûÑÏãú ÏïÑÏù¥Îîî ÏÑ§Ï†ï
        let testKeyValidate = sessionStorage.getItem('testKey');
        let resultType = sessionStorage.getItem('result2Type');

        //ÏÑ∏ÏÖò Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•Îêú Í≤∞Í≥ºÍ∞íÏùÑ Î∞±ÏóîÎìúÏóê ÏöîÏ≤≠
        RecommendService.getFinalResult(resultType, testKeyValidate).then(
            (response) => {

                console.log("getData:", response.data)

                //Ï†ÑÎã¨Î∞õÏùÄ Í∞íÏùÑ Îç∞Ïù¥ÌÑ∞Î°ú Ï†ÄÏû•
                setThisResult(response.data.info);
                //Ïã§Ìñâ
                ShowResult();
            }
        ).catch(
            (Error) => {
                //ÏóêÎü¨Í∞Ä Î∞úÏÉùÌñàÏùåÏùÑ Ï†ÄÏû•
                setIsError(true);
            }
        )

        //ÌÖåÏä§Ìä∏Ïö©
        //setThisResult(testData.info);
        //thisResultÎäî ÌÖåÏä§Ìä∏ Ï¢ÖÎ£åÎêòÎ©¥ ÏÇ≠Ï†ú Ï≤òÎ¶¨

        ShowResult();
    },[])

    useEffect(() => {
        ShowResult();
    },[thisResult])
    
    const ShowResult = () => {
        console.log('thisResult:',thisResult);
        console.log('testData.list.academicName:',thisResult[0]);

        if(!thisResult){
            return(
                <></>
            );
        }

        return(
            <>
                <Accordion defaultActiveKey="0" flush>
                    {
                        //testData.info.map(thisData => (
                        thisResult.map(thisData => (
                            <>
                                <Accordion.Item eventKey={thisData.departmentName}>
                                    <div id={`${thisData.departmentName}`} onClick={selectResult}>
                                        <Accordion.Header>{thisData.departmentName}</Accordion.Header>
                                    </div>
                                    <Accordion.Body>
                                        <ListGroup>
                                            <ListGroup.Item>{thisData.campus}</ListGroup.Item>
                                            <ListGroup.Item>{thisData.intro}</ListGroup.Item>
                                            <ListGroup.Item>{thisData.degree}</ListGroup.Item>
                                                {
                                                    (thisData.career !== null)?
                                                    <ListGroup.Item>{thisData.career}</ListGroup.Item>:
                                                    <></>
                                                }
                                                {
                                                    (thisData.curriculum !== null)?
                                                     <ListGroup.Item>{thisData.curriculum}</ListGroup.Item>:
                                                     <></>
                                                }
                                                {
                                                    (thisData.certification!== null)?
                                                    <ListGroup.Item>{thisData.certification}</ListGroup.Item>:
                                                    <></>                                                   
                                                }
                                                {
                                                    (thisData.webPage !== null)?
                                                    <ListGroup.Item>{thisData.webPage}</ListGroup.Item>:
                                                    <></>
                                                }
                                                {
                                                    (thisData.phoneNum !== null)?
                                                    <ListGroup.Item>{thisData.phoneNum}</ListGroup.Item>:
                                                    <></>
                                                }
                                        </ListGroup>
                                    </Accordion.Body>
                                </Accordion.Item>
                            </>
                        ))
                    }
                </Accordion>
            </>
        )
    }

    

    const selectResult =(event) =>{
        let result = event.currentTarget.id;
        // let result = selectedElement.current.id;

        console.log("selectedResult:",result);
        setAnswer(result);

        //ÏÑ†ÌÉùÌïú Ï†ÑÍ≥µÏóê ÎåÄÌï¥ ÏÉâ Î≥ÄÍ≤Ω(ÌîÑÎ°†Ìä∏Ïóê ÌëúÏãú)
        document.getElementById(result).style.border = "1px solid #002F5A";
        document.getElementById(result).style.color = "white";
    }

    const saveData = () => {
        //ÏÇ¨Ïö©ÏûêÍ∞Ä Í∞íÏùÑ ÏÑ†ÌÉùÌñàÏùÑ Í≤ΩÏö∞ÏóêÎßå ÏÑ†ÌÉùÍ∞íÏùÑ Î∞±ÏóîÎìúÎ°ú Ï†ÑÏÜ°
        if(answer !== false){


            //ÏûÑÏãú ÏïÑÏù¥Îîî ÏÑ§Ï†ï
            let testKeyValidate = sessionStorage.getItem('testKey');

            //Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥ Î∞õÏïÑÏò§Í∏∞
            let thisUser = sessionStorage.getItem("user");

            //Î°úÍ∑∏Ïù∏ ÏïàÎêòÏñ¥ ÏûàÏúºÎ©¥ falseÎ°ú Í∞í ÏßÄÏ†ï
            if(!thisUser){
                thisUser = false;
            }
            console.log("answer:",answer);

            //ÎπÑÌöåÏõêÏù¥ Ï∞®ÌõÑÏóê ÌöåÏõêÍ∞ÄÏûÖ Ïãú Í∏∞Ï°¥Ïùò ÏÑúÎπÑÏä§ Ï†ïÎ≥¥Î•º Î∞õÏùÑ Ïàò ÏûàÎèÑÎ°ù -> ÏÑ†ÌÉùÌïú ÌïôÍ≥º Ï†ïÎ≥¥ Ï†ÄÏû•
            localStorage.setItem('recommendResult', answer);

            alert("Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.");

            //ÏÑ†ÌÉùÍ≤∞Í≥º APIÏ†ÑÏÜ°
            RecommendService.saveResult(answer, thisUser ,testKeyValidate).then(
                (response) => {
                }
            );


            //ÏÑ§Î¨∏APIÏ†ÑÏÜ°
            RecommendService.saveSurvey(reviewQuestion1, reviewQuestion2, reviewQuestion3, reviewQuestion4, reviewQuestion5, reviewQuestion6, reviewQuestion7, satisfyingStar, thisUser, testKeyValidate).then(
                (response) => {
                    navigate('/') //Î©îÏù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
                }
            )
        }
        else{
            alert("ÌïôÍ≥ºÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî~üòâ");
        }
    }

 
    function SatisfactionModal(props) {
    
        const Star = () => {
            const drawStar = (e) => {
                document.getElementById("realStar").style.width = `${e.target.value * 10}%`;
                // document.querySelector(`.star span`).style.width = `${e.target.value * 10}%`;
        
                //Î≥ÑÏ†ê Í∏∞Î°ù
                setSatisfyingStar(e.target.value);
        
            }

          return (
            <>
                <StarFrame >
                    <label>
                        <span class="star">
                            ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ
                            <span id="realStar">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
                                <input type="range" onChange={drawStar} value="1" step="1" min="0" max="10"/>
                        </span>
                    </label>
                </StarFrame>
            </>
          )
        }

        //Î¶¨Î∑∞ ÏßàÎ¨∏ Í∏∞Î°ùÏö© Ìï®Ïàò
        const selectReviewQuestion1 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion1(thisReview);
        }

        const selectReviewQuestion2 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion2(thisReview);
        }

        const selectReviewQuestion3 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion3(thisReview);
        }

        const selectReviewQuestion4 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion4(thisReview);
        }

        const selectReviewQuestion5 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion5(thisReview);
        }

        const selectReviewQuestion6 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion6(thisReview);
        }

        const selectReviewQuestion7 = (e) => {
            let thisReview = e.target.value;
            setReviewQuestion7(thisReview);
        }
           
        return (
            <Modal {...props} aria-labelledby="contained-modal-title-vcenter">
                <Modal.Header closeButton>
                <Modal.Title id="contained-modal-title-vcenter" >
                    <Container>
                    <Row>
                        <Col md={12} xs={12} >
                        <h6><b>Ï†ÄÌù¨ ÏÑúÎπÑÏä§ Ïñ¥Îñ†ÏÖ®Ïñ¥Ïöî?</b></h6>
                        </Col>
                    </Row>
                    </Container>
                </Modal.Title>
                </Modal.Header>
                <Modal.Body className="show-grid">
                <Container>
                    <Row>
                    <Col xs={12} md={12}>
                        <small><b>ÎßåÏ°±ÎèÑ Î≥ÑÏ†ê</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <Star/>
                    </Col>
        
                    <Col xs={12} md={12}>
                        <small><b>ÌòÑÏû¨ Í≥µÎ∂Ä ÌïòÍ≥† ÏûàÎäî Î≥∏Ï†ÑÍ≥µÏù¥ Î¨¥ÏóáÏù∏Í∞ÄÏöî?</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion1()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="Î≥∏Ï†ÑÍ≥µÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî~"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>Ïù¥ÏàòÌïòÍ≥† ÏûàÎäî Ïù¥Ï§ë(Î∂Ä)Ï†ÑÍ≥µÏùÄ Î¨¥ÏóáÏù∏Í∞ÄÏöî?</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion2()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="Ïù¥Ï§ë(Î∂Ä)Ï†ÑÍ≥µÏù¥ ÏóÜÎã§Î©¥ xÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî~"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>ÌïôÏö∞ÎãòÏù¥ ÏïåÍ≥†ÏûàÎäî ÏûêÏã†Ïùò MBTI Í≤∞Í≥ºÎäî Î¨¥ÏóáÏù∏Í∞ÄÏöî?</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion3()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="ex: ENTJ"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>Î≥∏ ÏÑúÎπÑÏä§Ïùò Í≤∞Í≥ºÍ∞íÏùò Ï†ïÌôïÎèÑÎäî Ïñ¥ÎäêÏ†ïÎèÑ ÎêòÎäî Í≤É Í∞ôÎÇòÏöî?</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion4()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="0 ~ 10 ÏÇ¨Ïù¥Ïùò Í∞íÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî~"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>Ï∂îÌõÑ ÌïÑÏöîÌïòÍ±∞ÎÇò Ï∂îÍ∞ÄÎêòÎ©¥ Ï¢ãÍ≤†Îã§Îäî ÏÑúÎπÑÏä§Í∞Ä ÏûàÏúºÎ©¥ Ï†ÅÏñ¥Ï£ºÏÑ∏Ïöî</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion5()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="Í∞úÏÑ†Ï†êÏù¥ÎÇò Ï∂îÍ∞ÄÌïòÎ©¥ Ï¢ãÏùÑ Í≤ÉÎì§~~"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>Î≥∏ ÏÑúÎπÑÏä§Í∞Ä Îçî Î∞úÏ†ÑÎêòÎ©¥ ÏÇ¨Ïö©Ìï† Ïö©ÏùòÍ∞Ä ÏûàÎÇòÏöî?</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion6()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="ÏúÑ ÏßàÎ¨∏Ïùò ÌîºÎìúÎ∞±ÍπåÏßÄ Î∞òÏòÅÎêòÏóàÏùÑ ÎïåÎ°ú Í∞ÄÏ†ïÌï¥Ï£ºÏÑ∏Ïöîüòä"></FormControl>
                        </InputGroup>
                    </Col>

                    <Col xs={12} md={12}>
                        <small><b>Ïª§Ìîº Í∏∞ÌîÑÌã∞ÏΩòÏùÑ Î∞õÏùÑ Ïπ¥Ïπ¥Ïò§ÌÜ° ÏïÑÏù¥ÎîîÎ•º ÎÇ®Í≤®Ï£ºÏÑ∏Ïöî</b></small>
                    </Col>
                    <Col xs={12} md={12}>
                        <InputGroup>
                            <FormControl onChange={() => selectReviewQuestion7()}  aria-label="Username"  aria-describedby="basic-addon1"  placeholder="Î≥∏Ï†ÑÍ≥µÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî~"></FormControl>
                        </InputGroup>
                    </Col>
                        
                    <PersonalButton>
                        <Col xs={12} md={12}>
                        <br/>
                        <Button className='recommend' onClick={saveData}>Ï†ÄÏû•ÌïòÍ∏∞</Button>
                        </Col>
        
                        <Col xs={12} md={12}>
                        <Button className='compete'>Í≥µÏú†ÌïòÍ∏∞</Button>
                        </Col>
        
                    </PersonalButton>
                    </Row>
        
                </Container>
                </Modal.Body>
            </Modal>
        )
      }


  return (
    <BodyBlock>
        <div className="container">
            <div className='notice'>
                <span><b>!!Ïù¥Ï§ëÏ†ÑÍ≥µ Ï∂îÏ≤ú ÏÑúÎπÑÏä§ Í≤∞Í≥º!!</b></span><br/>
                <span>ÌïôÍ≥ºÎ•º ÏÑ†ÌÉùÌïú Îí§ Ï†ÄÏû•ÏùÑ ÎàÑÎ•¥ÏãúÎ©¥ snsÏóê Í≥µÏú†Ìï† Ïàò ÏûàÏñ¥Ïöî~</span>
            </div>
            <div className='resultFrame'>
                {
                    !thisResult?
                    <></>:
                    <ShowResult/>  
                }
            </div>
            <div className='nextButtonFrame'>
            <Button className='nextButton' onClick={()=> setModalShow(true)}>Ï†ÄÏû•ÌïòÍ∏∞</Button>
            </div>
        </div>
        <SatisfactionModal show={modalShow} onHide={() => setModalShow(false)} />
    </BodyBlock>
  )
}

//CSS
const BodyBlock = styled.div`
    .container{
        display: grid;
        grid-template-rows: 1fr 5fr 1fr;
        background-color: white;
        text-align: center;
        /*justify-content: center;*/
        
        
        /*vertical-align: middle;*/
        row-gap: 10px;

        // height: 70vh;
        width: 45vh;
    }
    

    /*ÏïàÎÇ¥Î¨∏Íµ¨*/
    .notice{
        grid-row-start: 1;
        grid-row-end: 2;

        /*grid-template-rows: repeat(auto-fit, minmax(300px, auto));*/

        align-items: center;
        
        /*Í∏ÄÏî®*/
        padding-top: 3%;
        font-size: 15px;
        color: #5a5a5a;

    }

    /*ÌïôÎ¨∏Í≤∞Í≥º*/
    .resultFrame{
        grid-row-start: 2;
        grid-row-end: 3;
        /*grid-template-rows: repeat(auto-fit, minmax(300px, auto));*/

        //Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨Ïö© ÏÑ†Ïñ∏
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;

        .eachResult:nth-child(odd){

            background-color: #002F5A;
            opacity: 0.8;
        
            /*Î™®Ïñë*/
            border-radius: 5px;
            height: 3em;
            width: 50%;
        
            /*Í∏ÄÏî®*/
            font-size: 14px;
            color: white;
            font-weight: bold;
            padding-top: 10px;
    
            /*Ìò∏Î≤Ñ*/
            &:hover {
                background-color: #002F5A;
                opacity: 1;
            }
        }

        .eachResult:nth-child(even){

            background-color: #028799;
            opacity: 0.8;
        
            /*Î™®Ïñë*/
            border-radius: 5px;
            height: 3em;
            width: 50%;
        
            /*Í∏ÄÏî®*/
            font-size: 14px;
            color: white;
            font-weight: bold;
            padding-top: 10px;
    
            /*Ìò∏Î≤Ñ*/
            &:hover {
                background-color: #028799;
                opacity: 1;
            }
        }
    }

   
    /*Îã§Ïùå Î≤ÑÌäº*/
    .nextButtonFrame{
        grid-row-start: 3;
        grid-row-end: 4;
        /*grid-template-rows: repeat(auto-fit, minmax(300px, auto));*/

        //Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨Ïö© ÏÑ†Ïñ∏
        display: flex;
        justify-content: center;
        align-items: center;

        .nextButton{

            background-color: #002F5A;
            opacity: 0.8;
        
            /*Î™®Ïñë*/
            border-radius: 5px;
            width: 40%;
        
            /*Í∏ÄÏî®*/
            font-size: 14px;
            color: white;
            font-weight: bold;
    
            /*Ìò∏Î≤Ñ*/
            &:hover {
                background-color: #002F5A;
                opacity: 0.9;
            }
        }
    }
`

const StarFrame =styled.div`
    .star {
        position: relative;
        font-size: 2rem;
        color: #ddd;

        input {
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;
            opacity: 0;
            cursor: pointer;
        }

        span {
            width: 0;
            position: absolute; 
            left: 0;
            color: #002F5A;
            overflow: hidden;
            pointer-events: none;
      }
    }
`


//Í∞úÏù∏Î≥Ñ Í∏∞Îä• Î≤ÑÌäº ÏÑúÏãùCSS
const PersonalButton = styled.div`
  text-align: center;

  .recommend{
    /*ÏÉâ*/
    background-color: #002F5A;
    opacity: 0.8;

    font-size: 14px;
    width: 90%;
    height: 40%;
    margin-bottom: 8px;

    /*Ìò∏Î≤Ñ*/
    &:hover {
        background-color: #002F5A;
        opacity: 0.9;
      }
  }

  .compete{
    /*ÏÉâ*/
    background-color: #028799;
    opacity: 0.9;

    font-size: 14px;
    width: 90%;
    height: 40%;
    margin-bottom: 8px;

    /*Ìò∏Î≤Ñ*/
    &:hover {
        background-color: #028799;
        opacity: 1;
      }
  }

  .myPost{
    /*ÏÉâ*/
    background-color: #875100;
    opacity: 0.8;

    font-size: 14px;
    width: 90%;
    height: 40%;
    margin-bottom: 5px;

    /*Ìò∏Î≤Ñ*/
    &:hover {
        background-color: #875100;
        opacity: 0.9;
      }
  }
`